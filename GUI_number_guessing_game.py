# Simple GUI Number Guessing Game Using Tkinter Module :

# Game logic used in this project:
# at first system generates the unique random number from 1 to 100 when player presses Generate Random No button
# the game terminates only after we are able to guess the number generated by system
# unless we are able to guess the correct number; we keep entering the guessed number but we are allowed only 10 attempts
# if we don't complete the game within 10 attempts we lose the game


from tkinter import *  # * means import everything inside that module
from tkinter.messagebox import *
import random # for random number generation

root = Tk() # create window
root.title('"Welcome to Number Guessing Game"')
root.geometry('445x225') # window size

# for fixed window size

root.maxsize(445,225)
root.minsize(445,225)

label1 = Label(root, text= "NUMBER GUESSING GAME",fg='Purple',bg='Grey',font= 'Helvetica 13 bold')
label2 = Label(root, text= "Enter your guess:",font='Georgia 13', fg='Blue')
label3 = Label(root, text= "Result:",font='Georgia 13',fg='Red')

label1.grid(row=0 , column=0)
label2.grid(row=1 , column=0)
label3.grid(row=2, column =0)

# Player should press the Generate Random No button at first
# so that system generates unique random number against which player competes
player1 = StringVar(root,value=" First press Generate Random No")

entry1 = Entry(root,textvariable=player1,width=30,bd=4)
entry2 = Entry(root,width=30,bd=4)
entry1.grid(row =1 , column= 1)
entry2.grid(row =2, column= 1)

attempts = 10 # maximum attempts allowed

chances = StringVar()
chances.set("10 attempts remaining!")
label4 = Label(root,textvariable=chances,font='Helvetica 13 bold')
label4.grid(row=5,column=0)

# for clearing the text field its better to create the function
def clear_the_screen():
    entry1.delete(0,END)

# function for generating unique random between from 1 to 100
def random_num_generate():
    global random_number
    random_number = random.randint(1,100)
    clear_the_screen()

# function for entering the guessed input
# we use exception handling concept such that if user enters invalid input; then the program should not crash
def player_input():
    try:
        user_guess = int(entry1.get())
        winning_logic(random_number,user_guess) # function call


    except ValueError:
        clear_the_screen()
        # entry2.delete(0, END)
        entry2.insert(0,"Enter integers only!")


# function for main game logic
# just we check whether the guessed number is either equal to; less than or greater than the random number
# based on that output is generated

def winning_logic(random_no,player_guess):
    global attempts
    global chances
    attempts -= 1

    if attempts ==0:
        chances.set("You are out of attempts!")
        clear_the_screen()

    elif player_guess == random_no:
        result1 = 'Correct Guess!'
        entry2.delete(0, END)
        entry2.insert(0,result1)
        chances.set(f'You Win!')
        win = (f'Congrats! You guessed it correctly')
        showinfo(f'Number Guessing Game', win)
        response = askquestion('Number Guessing Game', 'Did you like the game?')
        if response == 'yes':
            showinfo('Number Guessing Game', "That's Great!!")
        else:
            showinfo('Number Guessing Game',"So Sad!")
        root.destroy()

    elif player_guess < random_no:
        result2 = 'Guess Higher!'
        entry2.delete(0,END)
        entry2.insert(0, result2)
        chances.set(f'Wrong! {attempts} attempts remaining')
        clear_the_screen()

    elif player_guess > random_no:
        result3 = 'Guess Lower!'
        entry2.delete(0,END)
        entry2.insert(0, result3)
        chances.set(f'Wrong! {attempts} attempts remaining')
        clear_the_screen()

# create buttons
button1 = Button(root, text='Generate Random No',fg='white',bg='grey',command=random_num_generate)
button1.grid(row=3, column=0,ipadx=20,ipady=8)
button2 = Button(root, text='Clear',fg='white',bg='grey',command=clear_the_screen)
button2.grid(row=3, column=1,ipadx=23,ipady=8)
button3 = Button(root, text='Check',fg='white',bg='grey',command=player_input)
button3.grid(row=4, column=1,ipadx=20,ipady=8)

root.mainloop()
